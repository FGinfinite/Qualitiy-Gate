# @package _global_

stage: selection

# 模型配置
selector_model:
  path: "converted_models/select_moe_converted_OLMoE-1B-7B-0125"
  tokenizer_name: "allenai/OLMoE-1B-7B-0125"

# Stage 2: Data Selection Configuration

# Hydra settings to create a timestamped output directory
hydra:
  run:
    dir: outputs/stage_2_selection/${now:%Y-%m-%d}/${now:%H-%M-%S}-${extract_config:${model_checkpoint_path}}
  sweep:
    dir: outputs/stage_2_selection
    subdir: ${now:%Y-%m-%d}/${now:%H-%M-%S}-${extract_config:${model_checkpoint_path}}
  job:
    config:
      override_dirname:
        kv_sep: "="
        item_sep: ","
        exclude_keys:
          - hydra.run.dir
          - hydra.sweep.dir
          - hydra.sweep.subdir

# Path to the full rank weights from stage 1
model_checkpoint_path: "outputs/stage_1_pretrain/2025-08-10/03-42-54-batch=8_lr=0.001_loss=beta_moment_matching_tag=none/full_rank_weights.pt"

# The final output path for the selected data
output_path: "${hydra:run.dir}/selected_data.jsonl"

tag: "none"

# Dataset configuration
dataset:
  data_dir: "dataset/train/processed"
  dataset_names:
    - "cot"
    - "dolly"
    - "flan_v2"
    - "oasst1"
  seed: 42
  shuffle: false
  max_sequence_length: 1024
  # 1.0 means using the full dataset
  subset_ratio: 1 

# Data selection percentage (0.05 means select top 5% of the data)
selection_percentage: 0.05

# Clustering method: "kmeans" or "hdbscan"
clustering_method: "hdbscan"

# Clustering parameters
clustering_params:
  # K-Means specific parameters
  auto_k: true  # Automatically determine k using Elbow method
  k: null  # Manual k value (only used if auto_k=false)
  k_range: [20, 50]  # k search range for Elbow method
  max_iters: 300  # Maximum iterations
  
  # K-Means parallel computation parameters
  enable_parallel_kmeans: false  # Enable multi-GPU parallel computation for k-value search
  parallel_processes: 4  # Number of parallel processes for k-value computation
  gpu_allocation_strategy: "round_robin"  # GPU allocation strategy: "round_robin" or "balanced"
  
  # HDBSCAN specific parameters
  min_cluster_size: null  # Minimum cluster size (auto-estimated if null)
  min_samples: null  # Minimum samples (auto-set if null)
  metric: "cosine"  # Distance metric
  use_gpu: true  # Use GPU acceleration if available
  auto_tune: false  # Auto-tune HDBSCAN parameters

# Skip data selection process after obtaining router logits
# If true, only performs model inference to collect router logits
# Data selection can then be performed separately using scripts/cluster_selection.py
skip_data_selection: true

# Data processing settings
data_process:
  batch_size: 32